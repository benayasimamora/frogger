// Program name
//
// This program was written by [Benaya(), Ezekiel (01082240022) , Tora() , Yoel() ] 
// on [November 2 , 2024]
//
// TODO: Description of program

#include <iostream>
using namespace std;

////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////  CONSTANTS  /////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// Provided constants
#define SIZE        9
#define TRUE        1
#define FALSE       0

// TODO: you may choose to add additional #defines here.

// Provided Enums
enum tile_type {LILLYPAD, BANK, WATER, TURTLE, LOG};


// Provided structs
struct board_tile {
    enum tile_type type; // The type of piece it is (water, bank, etc.)
    int occupied;        // TRUE or FALSE based on if Frogger is there.
};

////////////////////////////////////////////////////////////////////////////////
/////////////////////////////  FUNCTION PROTOTYPES  ////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// TODO: Your function prototypes here

// Prints out the current state of the board.
void print_board(struct board_tile board[SIZE][SIZE]);
void add_log(struct board_tile board[SIZE][SIZE] , int x , int y_start, int y_end); // buat nambahin log
void clear_row(struct board_tile board[SIZE][SIZE] , int x ); // buat clear row
void init_board(struct board_tile board[SIZE][SIZE]);
char type_to_char(enum tile_type type);

////////////////////////////////////////////////////////////////////////////////
//////////////////////////  FUNCTION IMPLEMENTATIONS  //////////////////////////
////////////////////////////////////////////////////////////////////////////////

int main(void) {

    cout << "Welcome to Frogger Game" << endl;
    struct board_tile game_board[SIZE][SIZE];
   
    init_board(game_board);

    // Stage 1.1 Initialise the gameboard.
    // Read user input and place turtles.
    cout << "How many turtles? " << endl;
    int num_turtle;
    int turtle_x , turtle_y;
    cin >> num_turtle;
    
    cout << "enter pairs: " << endl;
    for(int i = 0; i < num_turtle; i++){
        cin >> turtle_x >> turtle_y;
        if ((turtle_x > 0) && (turtle_x < 8) && (turtle_y >= 0) && (turtle_y <= 8) && (!game_board[turtle_x][turtle_x].occupied))
        game_board[turtle_x][turtle_y].type = TURTLE;
        }

    // Start the game and print out the gameboard.
    cout << "Game Started" << endl;
    print_board(game_board);


    cout << "Enter command: " << endl;
   char command;
    int x, start_y, end_y;

  
while (cin >> command) {
        if (command == 'l') {
          
            cin >> x >> start_y >> end_y;
           
            if (x > 0 && x < 8) add_log(game_board, x, start_y, end_y);
            
      print_board(game_board);
        cout << "Enter command: " << endl;

        }
       else if (command == 'c'){
        cin >> x;
        if ((x > 0) && (x < 8)) clear_row(game_board , x);
       }
    }

    cout << "Thank you for playing Frogger Game!" << endl;
    return 0;
}

void init_board(struct board_tile board[SIZE][SIZE])
{
for (int row = 0; row<SIZE; row++){
    for (int col = 0; col < SIZE; col++){
        board[row] [col].occupied = FALSE;
if (row == 0){
if (col % 2 ==0) board [row][col].type = LILLYPAD; else board [row][col].type = WATER;}
else if (row == 8){
    board[row][col].type = BANK;    
    if (col==4) board [row][col].occupied = TRUE;
} 
else{
    board[row][col].type = WATER;
            }
        }
    }
}

void add_log(struct board_tile board[SIZE][SIZE] , int x , int y_start, int y_end){
    if (y_start < 0) y_start = 0;
    if (y_end > 8) y_end = 8;
    for (int i = 0; i < SIZE; i++){if (board[x][i].type == TURTLE) return;};
    for (int i = y_start; i < y_end; i++) board [x][i].type = LOG;
} // ++

void clear_row(struct board_tile board[SIZE][SIZE] , int x){
    for (int i = 0; i <= 8; i++){
        if (board[x][i].occupied) return;
    }
    
    for (int i = 0; i < SIZE; i++) {
        board[x][i].type = WATER;
}
} // ++

void print_board(struct board_tile board[SIZE][SIZE]) {
    for (int row = 0; row < SIZE; row++) {
        for (int col = 0; col < SIZE; col++) {
            char type_char = '\0';
            if (board[row][col].occupied) {
                type_char = 'F';
            } else {
                type_char = type_to_char(board[row][col].type);
            }
            cout << type_char << " ";
        }
        cout << endl;
    }
}



char type_to_char(enum tile_type type) {
    char type_char = ' ';
    if (type == LILLYPAD) {
        type_char = 'o';
    } else if (type == BANK) {
        type_char = 'x';
    } else if (type == WATER) {
        type_char = '~';
    } else if (type == TURTLE) {
        type_char = 'T';
    } else if (type == LOG) {
        type_char = 'L';
    }
    return type_char;
}
