// stage 1 : Proses pembuatan dasar, bank, lalu pembuatan frog beserta cordinatnya untuk si frog tersebut


///////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
using namespace std;

////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////  CONSTANTS  /////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// Provided constants
#define SIZE        9
#define TRUE        1
#define FALSE       0



// enum yang ingin di buat
enum tile_type {LILLYPAD, BANK, WATER, TURTLE, LOG};


// struktuk yang di sediakan
struct board_tile {
    enum tile_type type; // Jenis potongannya (air, tepian, dll.)
    int occupied;        // TRUE or FALSE berdasarkan apakah Frogger ada
};

////////////////////////////////////////////////////////////////////////////////
/////////////////////////////  FUNCTION PROTOTYPES  ////////////////////////////
////////////////////////////////////////////////////////////////////////////////

// TODO: Your function prototypes here

// Prints out the current state of the board.
void print_board(struct board_tile board[SIZE][SIZE]);
void init_board(struct board_tile board[SIZE][SIZE]); // untuk mendefenisikan saja
char type_to_char(enum tile_type type);

////////////////////////////////////////////////////////////////////////////////
//////////////////////////  FUNCTION IMPLEMENTATIONS  //////////////////////////
////////////////////////////////////////////////////////////////////////////////


//fungsi inti 
int main(void) {

    cout << "Welcome to Frogger Game" << endl;
    struct board_tile game_board[SIZE][SIZE];
   
    init_board(game_board);

    //untuk menginput berapa banyak turtle yang di inginkan 
    int num_turtle, turtle_x , turtle_y;
    
    cout << "How many turtles ? :";
    cin >> num_turtle;

    //untuk menginput koordinat dari turtle tersebut
    cout << "enter pairs: " << endl;

    //perulangan untuk mencetak turtle berdasarkan kordinat yang di input 
    for(int i = 0; i < num_turtle; i++)
        {
        cin >> turtle_x >> turtle_y;
          if ((turtle_x > 0)  && 
              (turtle_x < 8)  && 
              (turtle_x >= 0) && 
              (turtle_y <= 8) && 
              (!game_board[turtle_x][turtle_x].occupied)) game_board[turtle_x][turtle_y].type = TURTLE;
        }




    // Start the game and print out the gameboard.
    cout << "Game Started" << endl;
    print_board(game_board);

    cout << "Enter command: " << endl;
    // TODO (Stage 1.3): Create a command loop, to read and execute commands!

    cout << "Thank you for playing Frogger Game!" << endl;
    return 0;
}



//occupied itu apakah frogger itu ada di tile nya itu apa engga
void init_board(struct board_tile board[SIZE][SIZE]){
    for (int ROW=0; ROW<SIZE; ROW++)
    { 
        for (int COL=0; COL<SIZE; COL++)
        {
            board[ROW][COL].occupied = FALSE;
            
            //untuk membuat lilipad pada row genap 0, 2, 4, 6, 8
            if(ROW == 0){
                if (COL % 2 == 0)    board[ROW][COL].type = LILLYPAD; 
                                else board[ROW][COL].type = WATER;
            } 
            //untuk membuat tanah pada baris 8, dan sisanya adalah air
            else if(ROW==8){
                board[ROW][COL].type = BANK;

                //untuk ngebuat frognya di tengah2 pada baris ke-8 (pairs 8 5)
                if(COL == 4) board[ROW][COL].occupied = TRUE; 
            } else {
                board[ROW][COL].type = WATER;
            }
        }
    }
}



void print_board(struct board_tile board[SIZE][SIZE]) {
    for (int row = 0; row < SIZE; row++) {
        for (int col = 0; col < SIZE; col++) {
            char type_char = '\0';
            if (board[row][col].occupied) {
                type_char = 'F';
            } else {
                type_char = type_to_char(board[row][col].type);
            }
            cout << type_char << " ";
        }
        cout << endl;
    }
}


//untuk menkonversi tipe petak permainan (yang didefinisikan dalam enumerasi tile_type) menjadi karakter yang sesuai untuk ditampilkan di layar
char type_to_char(enum tile_type type) {
    char type_char = ' ';
    if (type == LILLYPAD) {
        type_char = 'o';
    } else if (type == BANK) {
        type_char = 'x';
    } else if (type == WATER) {
        type_char = '~';
    } else if (type == TURTLE) {
        type_char = 'T';
    } else if (type == LOG) {
        type_char = 'L';
    }
    return type_char;
}
